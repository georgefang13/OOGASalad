{
  "states": {
    "INIT": {
      "init": "to getAvailablePieces [ ] [ make :pieces fromplayer curplayer \"piece foreach [ :x :pieces ] [ make :dz objdz :x if and != null :dz not hasclass :dz \"board [ makeavailable :x ] ] ] to getAvailableSpots [ ] [ make :spots fromgameclass \"board foreach [ :spot :spots ] [ if == 0 len dzitems :spot [ makeavailable :spot ] ] ]",
      "leave": "",
      "setValue": "",
      "to": "make :game_state_output \"SELECTPIECE"
    },
    "SELECTPIECE": {
      "init": "getAvailablePieces",
      "leave": "",
      "setValue": "make :selected_piece fromgame :game_state_input",
      "to": "make :game_state_output \"SELECTZONE"
    },
    "SELECTZONE": {
      "init": "getAvailableSpots",
      "leave": "",
      "setValue": "movepiece :selected_piece fromgame :game_state_input",
      "to": "make :game_state_output \"DONE"
    },
    "DONE": {
      "init": "",
      "leave": "gotonextplayer",
      "setValue": "",
      "to": "make :game_state_output \"INIT"
    }
  },
  "goals": [
  "to blocked [ :x ] [ if dzempty :x [ return true ] return != curplayer owner item 0 dzitems :x ] make :game_log [ ] foreach [ :dz fromgameclass \"board ] [ if dzempty :dz [ continue ] if != curplayer owner item 0 dzitems :dz [ continue ] foreach [ :edge dzpaths :dz ] [ make :dzs dzfollowtoblock :dz [ :edge ] fvar blocked make :curspot item 0 dzitems :dz if == 2 len :dzs [ make :game_state_output curplayer return; ] ] ]"
  ]
}