{
  "states": {
    "INIT": {
      "init": "to getAvailablePieces [ ] [ make :pieces fromplayer curplayer \"piece foreach [ :x :pieces ] [ make :dz objdz :x if and != null :dz not hasclass :dz \"board [ makeavailable :x ] ] ] to getAvailableSpots [ ] [ foreach [ :dz fromgameclass \"bottom ] [   if dzempty :dz [             makeavailable :dz    continue         ]   make :taken dzfollowtoblock :dz [ \"Up ] to xx [ :dz ] [ return dzempty :dz ]   if == 0 len :taken [ additem :dz :taken ]     make :enddz item - len :taken 1 :taken    make :next dzfollow :enddz [ \"Up ]     if != null :next [             makeavailable :next         ]     ]  ]",
      "leave": "",
      "setValue": "",
      "to": "make :game_state_output \"SELECTPIECE"
    },
    "ROLL": {
      "init": "getAvailablePieces",
      "leave": "",
      "setValue": "make :selected_piece fromgame :game_state_input",
      "to": "make :game_state_output \"SELECTZONE"
    },
    "CHOOSE_PIECE": {
      "init": "getAvailableSpots",
      "leave": "",
      "setValue": "movepiece :selected_piece fromgame :game_state_input",
      "to": "make :game_state_output \"DONE"
    },
    "CHOOSE_SQUARE": {
      "init": "make :available_items getrule :piece_selected \"available [ :old_dz ] make :available item 0 :available_items  if >= len :available 0 [     make :available_paths item 1 :available_items     makeallavailable :available ] ",
      "leave": "",
      "setValue": "make :dz fromgame :game_state_input make :choice_num index :dz :available make :chosen_path item :choice_num :available_paths movepiece :piece_selected :dz  getrule :piece_selected \"checkKing [ :piece_selected ]  if == 2 len :chosen_path [     make :dir item 0 :chosen_path     make :dz_cross dzfollow :old_dz :dir     make :piece item 0 dzitems :dz_cross     if != null :piece [         removepiece :piece     ] ] ",
      "to": "make :game_state_output \"DONE"
    },
    "DONE": {
      "init": "",
      "leave": "gotonextplayer",
      "setValue": "",
      "to": "make :game_state_output \"INIT"
    }
  },
  "goals": [
  "to blocked [ :x ] [ if dzempty :x [ return true ] return != curplayer owner item 0 dzitems :x ] make :game_log [ ] foreach [ :dz fromgameclass \"board ] [ if dzempty :dz [ continue ] if != curplayer owner item 0 dzitems :dz [ continue ] foreach [ :edge dzpaths :dz ] [ make :dzs dzfollowtoblock :dz [ :edge ] fvar blocked make :curspot item 0 dzitems :dz if == 3 len :dzs [ make :game_state_output curplayer return; ] ] ]"
  ]
}